
NEL_TOP ?= $(DOT) ;

NEL_LIB ?= $(NEL_TOP)$(SLASH)lib ;

NEL_OBJ ?= $(NEL_TOP)$(SLASH)obj ;

HDRS += $(NEL_TOP)$(SLASH)include ;

HDRS += E:/external/STLport-4.5/stlport s:/EXTERNAL/LIBXML2-2.4.5/include ;

C++BASEFLAGS = $(C++FLAGS) /W3 /GX /GR /D "_MBCS" /D "_LIB" /D "WIN32" ;

LINKFLAGS += /LIBPATH:E:/external/STLport-4.5/lib /subsystem:windows ;

LINKLIBS = User32.lib Gdi32.lib ;

# d  /nologo /MDd /W3 /GR /GX /Zi /Gm /Gi /Od /Gf      /D "_MBCS" /D "_LIB" /D "WIN32" /D "_DEBUG" /D "__STL_DEBUG"      /Fp"../obj/Debug/misc.pch" /Yu"stdmisc.h" /Fo"../obj/Debug/" /Fd"../obj/Debug/" /FD /GZ /c 
# df /nologo /MDd /W3 /GR /GX /Zi /Gm /Gi /Od /Ob1 /Gf /D "_MBCS" /D "_LIB" /D "WIN32" /D "_DEBUG" /D "NL_DEBUG_FAST"    /Fp"../obj/DebugFast/misc.pch" /Yu"stdmisc.h" /Fo"../obj/DebugFast/" /Fd"../obj/DebugFast/" /FD /GZ /c 
# rd /nologo /MD  /W3 /GR /GX /Zi         /O2          /D "_MBCS" /D "_LIB" /D "WIN32" /D "NDEBUG" /D "NL_RELEASE_DEBUG" /Fp"../obj/ReleaseDebug/misc.pch" /Yu"stdmisc.h" /Fo"../obj/ReleaseDebug/" /Fd"../obj/ReleaseDebug/" /FD /c 
# r  /nologo /MD  /W3 /GR /GX             /O2          /D "_MBCS" /D "_LIB" /D "WIN32" /D "NDEBUG"                       /Fp"../obj/Release/misc.pch" /Yu"stdmisc.h" /Fo"../obj/Release/" /Fd"../obj/Release/" /FD /c 

rule NelLibrary
{
       LOCATE_TARGET = $(NEL_OBJ)$(SLASH)jam_debug ;
       SOURCE_GRIST = debug ;
       C++FLAGS = $(C++BASEFLAGS) /MDd /Od /Zi /D "_DEBUG" /D "__STL_DEBUG" /Fd$(LOCATE_TARGET)$(SLASH) ;
       Library $(NEL_LIB)$(SLASH)jam_$(<)_debug : $(>) ;

       LOCATE_TARGET = $(NEL_OBJ)$(SLASH)jam_debug_fast ;
       SOURCE_GRIST = debug_fast ;
       C++FLAGS = $(C++BASEFLAGS) /MDd /Od /Zi /Ob1 /D "_DEBUG" /D "NL_DEBUG_FAST" /Fd$(LOCATE_TARGET)$(SLASH) ;
       Library $(NEL_LIB)$(SLASH)$(SLASH)jam_$(<)_debug_fast : $(>) ;

       LOCATE_TARGET = $(NEL_OBJ)$(SLASH)jam_release_debug ;
       SOURCE_GRIST = release_debug ;
       C++FLAGS = $(C++BASEFLAGS) /MD /O2 /Zi /D "NDEBUG" /D "NL_RELEASE_DEBUG" /Fd$(LOCATE_TARGET)$(SLASH) ;
       Library $(NEL_LIB)$(SLASH)$(SLASH)jam_$(<)_release_debug : $(>) ;

       LOCATE_TARGET = $(NEL_OBJ)$(SLASH)jam_release ;
       SOURCE_GRIST = release ;
       C++FLAGS = $(C++BASEFLAGS) /MD /O2 /D "NDEBUG" ;
       Library $(NEL_LIB)$(SLASH)$(SLASH)jam_$(<) : $(>) ;
}

rule NelMain
{
       LOCATE_TARGET = $(SEARCH_SOURCE)$(SLASH)jam_debug ;
       SOURCE_GRIST = debug ;
       C++FLAGS = $(C++BASEFLAGS) /MDd /Od /Zi /D "_DEBUG" /D "__STL_DEBUG" /Fd$(LOCATE_TARGET)$(SLASH) /D "_WINDOWS" ;
       Main $(<)_debug : $(>) ;

       LOCATE_TARGET = $(SEARCH_SOURCE)$(SLASH)jam_debug_fast ;
       SOURCE_GRIST = debug_fast ;
       C++FLAGS = $(C++BASEFLAGS) /MDd /Od /Zi /Ob1 /D "_DEBUG" /D "NL_DEBUG_FAST" /Fd$(LOCATE_TARGET)$(SLASH) /D "_WINDOWS" ;
       Main $(<)_debug_fast : $(>) ;

       LOCATE_TARGET = $(SEARCH_SOURCE)$(SLASH)jam_release_debug ;
       SOURCE_GRIST = release_debug ;
       C++FLAGS = $(C++BASEFLAGS) /MD /O2 /Zi /D "NDEBUG" /D "NL_RELEASE_DEBUG" /Fd$(LOCATE_TARGET)$(SLASH) /D "_WINDOWS" ;
       Main $(<)_release_debug : $(>) ;

       LOCATE_TARGET = $(SEARCH_SOURCE)$(SLASH)jam_release ;
       SOURCE_GRIST = release ;
       C++FLAGS = $(C++BASEFLAGS) /MD /O2 /D "NDEBUG" /D "_WINDOWS" ;
       Main $(<) : $(>) ;
}

rule NelLinkLibraries
{
       SOURCE_GRIST = debug ;
       LinkLibraries $(<)_debug : $(NEL_LIB)$(SLASH)$(>)_debug ;

       SOURCE_GRIST = debug_fast ;
       LinkLibraries $(<)_debug_fast : $(NEL_LIB)$(SLASH)$(>)_debug_fast ;

       SOURCE_GRIST = release_debug ;
       LinkLibraries $(<)_release_debug : $(NEL_LIB)$(SLASH)$(>)_release_debug ;

       SOURCE_GRIST = release ;
       LinkLibraries $(<) : $(NEL_LIB)$(SLASH)$(>) ;
}

